- [X] harness: better terminal output 
  - mimic last semesters' harness
  - [X] PASS or FAIL for each test [2/2]
    - [X] get name of every test case
      - [X] get print from a Sys.command (just redirect to file)
      - [X] -log creates 
    - [X] identify which failed
- [X] document harness failures in _output folder [3/3]
  - [X] extract "test was false" from output
  - [X] enscript [3/3]
    - [X] save source code
    - [X] save list of fails
    - [X] save list of all tests
  - [X] save text-based output
- [X] smoke: better terminal output
  - pretty sure just marginal changes
- [X] premature nocompile (187 files ok)
- [X] debug the broken ps printer. Should
  not fail with Unix error on ik249
  (123 files ok)
- [X] pretty printer. Modify toplevel for unittest printer [2/2]
  - HEY ocaml has a nice method for writing objects to output stream
    maybe this will work?
  - [X] use the ocamltest library from last semester
  - [X] incorporate timeouts to that library
    - aa688
- [X] harness the ps2 submissions [2/2]
  - [X] smoke [2/2]
    - [X] run it
    - [X] verify emails + nocompiles
  - [X] harness
- [X] bug: stops printing halfway through
- [X] warnings as errors
- [X] oUnit -> ounit
- [X] "include" folder
- [X] change _depend to .depend, ditto on .lib
- [X] install on other computers [5/5]
  - document all error messages!
  - ocamlfind cannot find package threads (incomplete)
    - patch from [[https://groups.google.com/forum/#!msg/nmag-users/dINExVJZXng/qglQmPFJUoUJ][here]]
  - [X] clean osx
  - [X] arch box
    - ok so far . .
    - AH! Cannot ocamlfind ounit
      - make sure ounit installed
      - may be case insensitivity
      - may be weird ounit install
  - [X] rentenna3
    - ocamlc not found
      - unable to locate opam
        - not found: add-apt-repository
        - fail: python-software-properties
        - apt-get update
        - success: python-s-p
        - success: add-apt-repository
  - apt-get install ocaml
    - success: opam initi, comfigure env
    - fail: opam ocamlfind
      - apt-get m4
    - 
  - [X] rentenna box
    - install python-...
    - install m4
    - add repo
    - apt update
    - install ocaml opam
    - opam init, opam config env
    - opam install ocamlfind ounit pa_ounit
  - [X] ubuntu
    - virtual machine, 3.12 already installed
      - cannot build, need ocamlfind
      - opam -> ocamlfind 
      - follows opam instructions
        add-apt-repository ppa:avsm/ppa
        - may need to `apt-get install python-software-properties`
        apt-get update
        apt-get install ocaml opam
      - still no ocamlfind, still 3.12
      - opam init
        - add line to .profile, .opaminit
      - opam config env
      - ocaml -version not 4.01.0 ? 
        opam switch 4.01.0
      - opam install ocamlfind
        - apt-get install m4
      - opam install ounit
      - opam install pa_ounit
      - pa_ounit.syntax not found
- [X] rigorous documentation
- [X] grades sheet for CMS
  - [X] yaml
  - [X] test name -> point value
  - [X] create rubric [2/2]
    - [X] first draft
    - [X] point totals in test name
  - [X] test [3/3]
    - [X] build rubric
    - [X] use existing
    - [X] catch errors in rubric
  - [X] assert rubric
  - [X] accumulate points into sheet [4/4]
    - [X] init stream
    - [X] write netid
    - [X] write points
    - [X] write comments
- [X] assertions for students [2/2]
  - [X] try opam package
    - [[http://opam.ocaml.org/doc/Packaging.html][packaging]]
    - [X] assertions.git
    - [X] assertions-opam.git
    - [X] update the makefile
    - [X] KILLED gotta use oasis
    - currently doing test package in /tmp
    - see if it installed in my .opam
    - find & use from ocamlfind/ocamlbuild
  - [X] otherwise crunch into release just like staff
    - is this even a good idea?
  - (nevermind) opam [0/1]
    - [ ] stick the whole thing in a repo (it's not a big thing)
- [X] reverse harness [4/4]
  - [X] get tests from student dirs (input is dirs, just like harness)
  - [X] run tests on group of fakes
  - [X] fake name -> point
  - [X] give points based on who you make fail
- ISSUES with reverse harness
  - staff needs perfect solution, even 
    after pset changes / clarifies
  - staff needs perfect dummy solutions
    (perfect tests are hard enough)
  - cannot have all dummies fail
    because student could win with
    assert(false)
  - cannot have all dummies pass because
    students may not have tested rigorously
  - need both, need a medium
  - but then need points to enforce
  - rather a binary "did you write tests?"
    and maybe "do you pass your tests?"
- [-] better documentation 
  - [ ] students
    - [ ] readme (assertions)
    - [ ] mli
    - [ ] makefile
  - [-] staff
    - [ ] coyp studdent
    - [ ] mli
    - [X] tailor a little more
- [X] relax timeout
- [ ] compile mapreduce, other big things
- (nevermind) real YAML parser
  - [[https://github.com/mk270/oyaml][oyaml]] (nevermind)
- [X] make sure fnames are in constants
  - [X] student
  - [X] staff
- [X] good exceptions
  - [X] student
  - [X] staff
- [ ] helpers for magic files
  - [ ] pls enter smoke test targets, etc
- [ ] pre_methods, to clean up dispatch
- [ ] merge the history and work into the tools repo.
  - [ ] maybe set it up for remote tracking somehow if we also want a private one?
  - http://gbayer.com/development/moving-files-from-one-git-repository-to-another-preserving-history/
